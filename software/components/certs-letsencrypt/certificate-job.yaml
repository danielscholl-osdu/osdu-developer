apiVersion: batch/v1
kind: Job
metadata:
  name: letsencrypt-certificate-job
  namespace: osdu-system
spec:
  ttlSecondsAfterFinished: 3600  # Keep job for 1 hour after completion
  template:
    spec:
      serviceAccountName: default
      containers:
      - name: certificate-creator
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          # Wait for dns-config ConfigMap to be available
          echo "Waiting for dns-config ConfigMap..."
          while ! kubectl get configmap dns-config -n osdu-system &>/dev/null; do
            echo "dns-config ConfigMap not found, waiting 5 seconds..."
            sleep 5
          done

          # Get FQDN from dns-config ConfigMap
          FQDN=$(kubectl get configmap dns-config -n osdu-system -o jsonpath='{.data.fqdn}')
          echo "Found FQDN: $FQDN"
          
          # Create Certificate resource that will use the Let's Encrypt staging issuer
          echo "Creating Certificate resource for $FQDN"
          cat <<EOF | kubectl apply -f -
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: letsencrypt-certificate
            namespace: osdu-system
          spec:
            secretName: letsencrypt-certificate-tls
            issuerRef:
              name: letsencrypt-staging
              kind: ClusterIssuer
            dnsNames:
            - $FQDN
            duration: 2160h # 90 days
            renewBefore: 720h # 30 days
          EOF
          
          echo "Waiting for certificate to be issued..."
          RETRIES=30
          RETRY_INTERVAL=10
          
          for ((i=1; i<=RETRIES; i++)); do
            CERT_STATUS=$(kubectl get certificate letsencrypt-certificate -n osdu-system -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}' 2>/dev/null || echo "")
            
            if [[ "$CERT_STATUS" == "True" ]]; then
              echo "Certificate is ready!"
              kubectl get certificate letsencrypt-certificate -n osdu-system -o wide
              exit 0
            fi
            
            echo "Certificate not ready yet (attempt $i/$RETRIES), waiting $RETRY_INTERVAL seconds..."
            sleep $RETRY_INTERVAL
          done
          
          echo "Certificate failed to be issued within the timeout period."
          kubectl describe certificate letsencrypt-certificate -n osdu-system
          exit 1
      restartPolicy: OnFailure
  backoffLimit: 3  # Retry 3 times if fails